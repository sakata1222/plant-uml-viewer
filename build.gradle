/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/tutorial_java_projects.html
 */

plugins {
  id 'java'
  id "com.gradle.build-scan" version "2.4"
  id "org.springframework.boot" version "2.1.7.RELEASE"
  id "io.spring.dependency-management" version "1.0.8.RELEASE"
  id "com.moowork.node" version "1.3.1"
}

repositories {
  // Use jcenter for resolving dependencies.
  // You can declare any Maven/Ivy/file repository here.
  jcenter()
}

ext {
  lombokVersion = '1.18.8'
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-dependencies:2.1.7.RELEASE'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  // https://mvnrepository.com/artifact/net.sourceforge.plantuml/plantuml
  implementation group: 'net.sourceforge.plantuml', name: 'plantuml', version: '8059'
  // https://mvnrepository.com/artifact/commons-io/commons-io
  implementation group: 'commons-io', name: 'commons-io', version: '2.6'
  // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.27'
  // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
  implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
  // https://mvnrepository.com/artifact/com.google.guava/guava
  implementation group: 'com.google.guava', name: 'guava', version: '28.0-jre'
  // https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox
  implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.16'

  // https://mvnrepository.com/artifact/org.projectlombok/lombok
  compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def frontendDir = file('frontend')
def resource = file('src/main/resources')
def staticResource = new File(resource, 'static')

node {
  nodeModulesDir = frontendDir
}

task copyFrontend(type: Copy) {
  from frontendDir.name + '/build'
  into staticResource
}

task cleanFrontend(type: Delete) {
  delete staticResource
}

copyFrontend.dependsOn cleanFrontend

task bundleFrontend

bundleFrontend.dependsOn npm_run_build
bundleFrontend.finalizedBy copyFrontend

bootJar {
  mainClassName = 'jp.gr.java_conf.saka.plantuml.viewer.App'
}

bootRun.dependsOn cleanFrontend

task startApp

startApp.dependsOn classes
startApp.dependsOn bundleFrontend
startApp.finalizedBy bootRun
